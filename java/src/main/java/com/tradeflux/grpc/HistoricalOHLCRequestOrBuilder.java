// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grpc/tradeflux.proto

package com.tradeflux.grpc;

public interface HistoricalOHLCRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:tradeflux.HistoricalOHLCRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>string symbol = 1;</code>
   * @return The symbol.
   */
  java.lang.String getSymbol();
  /**
   * <code>string symbol = 1;</code>
   * @return The bytes for symbol.
   */
  com.google.protobuf.ByteString
      getSymbolBytes();

  /**
   * <code>.tradeflux.Interval interval = 2;</code>
   * @return The enum numeric value on the wire for interval.
   */
  int getIntervalValue();
  /**
   * <code>.tradeflux.Interval interval = 2;</code>
   * @return The interval.
   */
  com.tradeflux.grpc.Interval getInterval();

  /**
   * <pre>
   * Unix timestamp in ms
   * </pre>
   *
   * <code>int64 start_time = 3;</code>
   * @return Whether the startTime field is set.
   */
  boolean hasStartTime();
  /**
   * <pre>
   * Unix timestamp in ms
   * </pre>
   *
   * <code>int64 start_time = 3;</code>
   * @return The startTime.
   */
  long getStartTime();

  /**
   * <pre>
   * Unix timestamp in ms
   * </pre>
   *
   * <code>int64 end_time = 4;</code>
   * @return Whether the endTime field is set.
   */
  boolean hasEndTime();
  /**
   * <pre>
   * Unix timestamp in ms
   * </pre>
   *
   * <code>int64 end_time = 4;</code>
   * @return The endTime.
   */
  long getEndTime();

  /**
   * <pre>
   * Default: 0 (UTC)
   * </pre>
   *
   * <code>string timezone = 5;</code>
   * @return Whether the timezone field is set.
   */
  boolean hasTimezone();
  /**
   * <pre>
   * Default: 0 (UTC)
   * </pre>
   *
   * <code>string timezone = 5;</code>
   * @return The timezone.
   */
  java.lang.String getTimezone();
  /**
   * <pre>
   * Default: 0 (UTC)
   * </pre>
   *
   * <code>string timezone = 5;</code>
   * @return The bytes for timezone.
   */
  com.google.protobuf.ByteString
      getTimezoneBytes();

  /**
   * <code>int32 limit = 6;</code>
   * @return Whether the limit field is set.
   */
  boolean hasLimit();
  /**
   * <code>int32 limit = 6;</code>
   * @return The limit.
   */
  int getLimit();
}
